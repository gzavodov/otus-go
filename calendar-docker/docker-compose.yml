version: '3'
networks:
    calendar_nw:
        driver: bridge

services:
    postgres:
        image: postgres:12
        ports:
            - 5432:5432
        expose:
            - 5432
        env_file:
            - ./env/db.env
        volumes:
            - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
        networks:
            - calendar_nw
    rabbit:
        image: rabbitmq:3.7-management
        ports:
            - 15672:15672
            - 5672:5672
        expose:
            - 15672
            - 5672
        networks:
            - calendar_nw
    calendar_api:
        build: ../calendar-api
        volumes:
            - "./script/wait-for-it.sh:/calendar/wait-for-it.sh"
        depends_on:
            - postgres
        restart: on-failure
        ports:
            - 8888:8888
        expose:
            - 8888
        env_file:
            - ./env/api.env
        entrypoint: ["bash", "-c", "./wait-for-it.sh postgres:5432 -- ./api --config=config.json"]
        networks:
            - calendar_nw
    calendar_scheduler:
        build: ../calendar-scheduler
        volumes:
            - "./script/wait-for-it.sh:/calendar/wait-for-it.sh"
        depends_on:
            - rabbit
            - calendar_api
        restart: on-failure
        env_file: 
            - ./env/scheduler.env
        entrypoint: ["bash", "-c", "./wait-for-it.sh rabbitmq:15672 -- ./scheduler --config=config.json"]
        networks:
            - calendar_nw
    calendar_client:
        build: ../calendar-client
        volumes:
            - "./script/wait-for-it.sh:/calendar/wait-for-it.sh"
        depends_on:
            - rabbit
            - calendar_scheduler
        restart: on-failure
        env_file: 
            - ./env/client.env
        entrypoint: ["bash", "-c", "./wait-for-it.sh rabbitmq:15672 -- ./client --config=config.json"]
        networks:
            - calendar_nw