version: "3"
networks:
  calendar_nw:
    driver: bridge

volumes:
  prometheus_data: {}

services:
  postgres:
    image: postgres:11
    ports:
      - "5432:5432"
    env_file:
      - ./env/db.env
    volumes:
      - /var/lib/postgresql/data
      - ./postgres/pg_stat_statements.sh:/docker-entrypoint-initdb.d/pg_stat_statements.sh
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - calendar_nw
  rabbitmq:
    image: rabbitmq:3.7-management
    ports:
      - "15672:15672"
      - "5672:5672"
    networks:
      - calendar_nw
  calendar_api:
    build: ../calendar-api
    depends_on:
      - postgres
    restart: on-failure
    ports:
      - "8880:8880"
      - "9999:9999"
    env_file:
      - ./env/api.env
    entrypoint: ["bash", "-c", "/usr/bin/wait-for-it.sh postgres:5432 -- /calendar/api --config=config.json"]
    networks:
      - calendar_nw
  calendar_scheduler:
    build: ../calendar-scheduler
    depends_on:
      - rabbitmq
      - calendar_api
    restart: on-failure
    ports:
      - "8881:8881"
    env_file: 
      - ./env/scheduler.env
    entrypoint: ["bash", "-c", "/usr/bin/wait-for-it.sh calendar_api:8888 -- /calendar/scheduler --config=config.json"]
    networks:
      - calendar_nw
  calendar_client:
    build: ../calendar-client
    depends_on:
      - rabbitmq
      - calendar_scheduler
    restart: on-failure
    env_file: 
      - ./env/client.env
    entrypoint: ["bash", "-c", "/usr/bin/wait-for-it.sh rabbitmq:15672 -- /calendar/client --config=config.json"]
    networks:
      - calendar_nw
  prometheus:
    image: prom/prometheus:v2.16.0
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/api.html:/etc/prometheus/consoles/api.html
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention=120h"
      - "--web.enable-lifecycle"
    #restart: unless-stopped
    ports:
      - "9090:9090"
    networks:
      - calendar_nw
  pgexporter:
    image: wrouesnel/postgres_exporter:v0.8.0
    container_name: pgexporter
    depends_on:
      - postgres
    env_file:
      - ./env/db_monitoring_exporter.env
    ports:
      - "9187:9187"
    volumes:
      - ./postgres_exporter:/etc/postgres_exporter
    command: "--extend.query-path=/etc/postgres_exporter/queries.yml"
    networks:
      - calendar_nw